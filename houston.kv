#:kivy 1.0.9
<Top>:
    uart_tab: uart_tab
    sched_tab: sched_tab
    resp_tab: resp_tab
    dash_tab: dash_tab
    orientation: 'vertical'

    AnchorLayout:
        anchor_x: 'left'
        anchor_y: 'top'
        size_hint: 1, 0.01
        # size_y: 60

        Image:
            source: 'logo.png'
            size_hint: None, None
            size: 300, 68
    AnchorLayout:
        anchor_x: 'right'
        anchor_y: 'top'
        size_hint: 1, 0.01
        Button:
            text:'settings'
            font_size: 30
            on_release: app.open_settings()
            size_hint: None, None
            size: 200, 68
            color: 0.3, 0.3, 0.3, 1
            background_color: 0,0,0,1


    BoxLayout: #space below the logo tab
        orientation: 'horizontal'
        size_hint: 1, 0.99
        TabbedPanel:
            size_hint: 1, .95
            pos_hint: {'center_x': .5, 'center_y': .475}
            do_default_tab: False

            UARTTab:
                id: uart_tab
            SCHEDTab:
                id: sched_tab
            RESPTab:
                id: resp_tab
            DASHTab:
                id: dash_tab
            

<UARTTab>: # the main UART tab
    text: 'Telem'
    uart_entry: uart_entry
    rv: rv
    BoxLayout: 
        id: bl1
        size_hint_y: 1
        size_hint_x: 1
        orientation: 'vertical'

        BoxLayout: # layout for main area
            id: main_area
            size_hint_y: 0.9
            size_hint_x: 1
            orientation: 'vertical'

            BoxLayout: # top bar
                size_hint_x: 1
                size_hint_y: 0.05
                Label:
                    text: root.port_label
                    color: root.port_label_color
                    
                Label:
                    id: my_custom_label
                    text: 'Other Status Thing'

            BoxLayout: # main data list
                size_hint_x: 1
                size_hint_y: 0.85
                RecycleView:
                    id: rv
                    scroll_type: ['bars', 'content']
                    scroll_wheel_distance: dp(114)
                    bar_width: dp(10)
                    viewclass: 'UARTRow'
                    RecycleBoxLayout:
                        default_size: None, dp(30) # dp(30) is height
                        default_size_hint: 1, None
                        size_hint_y: None
                        height: self.minimum_height
                        orientation: 'vertical'
                        spacing: dp(2)


        BoxLayout: # layout for command entry
            size_hint_y: 0.05
            size_hint_x: 1
            TextInput:
                id: uart_entry
                text: ""
                size_hint: .8, 1
                spacing: .2, .2
                # height: dp(30)
                multiline: False
                on_text_validate: root.on_enter(*args) # can either call root. or app. - in this case, root is MainTab class

            Button:
                text: 'Send'
                size_hint_y: 1
                size_hint_x: 0.2
                on_press: root.send_button_press()



<SCHEDTab>: # the command queue tab
    text: 'Schedule'
    sched_rv: sched_rv
    cmd_entry: cmd_entry
    cmd_epoch_entry: cmd_epoch_entry
    cmd_expected_entry: cmd_expected_entry
    cmd_timeout_entry: cmd_timeout_entry
    cmd_rel: cmd_rel

    BoxLayout: # panels must have only one direct child
        orientation:'vertical'
        
        GridLayout: # container for the column labels
            cols: 4
            rows: 1
            size_hint_y: None
            height: 50
            Label:
                text: 'Command'
            Label:
                text: 'Epoch'
            Label:
                text: 'Expected Response'
            Label:
                text: 'Timeout'
        
        GridLayout: # for buttons
            cols: 4
            rows: 2
            size_hint_y: None
            height: dp(90)
            padding: dp(8)
            spacing: dp(16)
            TextInput:
                id: cmd_entry
                size_hint_x: 1
                hint_text: 'Command'
                padding: dp(10), dp(5), 0, 0

            TextInput:
                id: cmd_epoch_entry
                size_hint_x: 1
                hint_text: 'Timeout'
                padding: dp(10), dp(5), 0, 0
            
            TextInput:
                id: cmd_expected_entry
                size_hint_x: 1
                hint_text: 'Expected Response'
                padding: dp(10), dp(5), 0, 0

            TextInput:
                id: cmd_timeout_entry
                size_hint_x: 1
                hint_text: 'Timeout'
                padding: dp(10), dp(5), 0, 0
            Button:
                text: 'Add to Schedule'
                on_press: root.add_to_sched()

            Button:
                text: 'Clear Schedule'
                on_press: root.clear_sched()

            BoxLayout:
                orientation:'horizontal'

                Label:
                    text: 'Relative'
                    text_align: 'right'
                
                CheckBox:
                    color: 0.5, 0.9, 0.66, 1
                    active: 'True'
                    id: cmd_rel


        RecycleView:
            id: sched_rv
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(10)
            viewclass: 'Cmdrow'
            size_hint_y: 0.8
            RecycleGridLayout:
                default_size: None, dp(30)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(2)
                cols: 1

        BoxLayout: # load, save, schedule buttons 
            orientation: 'horizontal'
            size_hint_y: 0.1
            BoxLayout:
                spacing: dp(16)
                size_hint_y: None
                height: 50
                Button:
                    text: 'Load'
                    on_release: root.show_load()
                Button:
                    text: 'Save'
                    on_release: root.show_save()
                Button:
                    text: 'Uplink Schedule'
                    on_release: root.uplink_schedule()
    

<RESPTab>: # tab for responses
    text: 'Response'
    resp_rv: resp_rv
    BoxLayout:
        orientation:'vertical'

        GridLayout: # container for the column labels
            cols: 4
            rows: 1
            size_hint_y: None
            height: 50
            Label:
                text: 'ID'
                size_hint_x: 0.1
            Label:
                text: 'Command'
                size_hint_x: 0.3
            Label:
                text: 'Expected Response'
                size_hint_x: 0.3
            Label:
                text: 'Status'
                size_hint_x: 0.3
        
        RecycleView:
            id: resp_rv
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(10)
            viewclass: 'Resprow'
            size_hint_y: 0.8
            RecycleBoxLayout:
                default_size: None, dp(30)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(2)
                # cols: 1 # required if this is recycleGridLayout

<DashItem>:
    canvas.before:
        Color:
            rgba: 0.14, 0.14, 0.14, 1
    size_hint_y: 0.2
    size_hint_x: 0.2   

<DASHTab>: # tab for responses
    text: 'Dashboard'
    BoxLayout:
        orientation:'vertical'

        GridLayout: # container for the column labels
            cols: 4
            rows: 4
            size_hint_y: None
            height: 50

        



<UARTRow@BoxLayout>: # row class for the UART telemetry
    canvas.before:
        Color:
            rgba: 0.14, 0.14, 0.14, 1
        Rectangle:
            size: self.size
            pos: self.pos
    value: '' # this is the key of the dict item that will be used
    BoxLayout:
        size_hint_x: 1
        orientation: 'horizontal'
        Label:
            text: root.value
            text_size: root.width, None
            padding: 20, 10
            halign: 'left'
            color: 0.92, 0.9, 0.66, 1

<Cmdrow@BoxLayout>: # the row class for the command system - pulls out several different items and displays nicely
    canvas.before:
        Color:
            rgba: 0.14, 0.14, 0.14, 1
        Rectangle:
            size: self.size
            pos: self.pos
    # these allow us to pop data in from py - these are rv.data dict keys
    cmdid: 0
    cmd: ''
    timeout: 0
    expect: ''
    epoch: 0
    rel: True
    BoxLayout:
        size_hint_x: 1
        orientation: 'horizontal'
        Label:
            size_hint_x: 0.05
            text: str(root.cmdid)
            color: 0.3, 0.3, 0.3, 1
        Label:
            size_hint_x: 0.2
            text: root.cmd
            color: 0.0, 0.9, 0.66, 1
        Label:
            size_hint_x: 0.2
            text: str(root.epoch)
            #text: root.epoch #str('+'+str(epoch)) if (root.rel == 'True') else str('| '+str(epoch)+ ' |')
            color: 0.0, 0.9, 0.66, 1
        Label:
            size_hint_x: 0.22
            text: root.expect
            color: 0.0, 0.9, 0.66, 1
        Label:
            size_hint_x: 0.2
            text: str(root.timeout)
            color: 0.0, 0.9, 0.66, 1

        Button:
            text: 'X'
            size_hint_x: 0.05
            on_press: app.rm_button_press(root.cmdid)
            color: 0.14, 0.14, 0.14, 1
       
<Resprow@BoxLayout>: 
 # these allow us to pop data in from py - these are rv.data dict keys
    cmdid: 0
    cmd: ''
    timeout: 0
    expect: ''
    epoch: 0
    rel: True
    state: ''
    colours: {'pending':(0,0,1,0.5), 'ack':(0,1,0,0.5),'':(0,0,0,0.5), 'new':(1,1,0.5,0.5), 'errored':(1,0.1,0.1,0.5)}
  
    canvas.before:
        Color:
            rgba: self.colours[self.state] #self.r,1, 1, 1 #self.colours[self.state]
        Rectangle:
            size: self.size
            pos: self.pos
   
    BoxLayout:
        size_hint_x: 1
        orientation: 'horizontal'
        Label:
            size_hint_x: 0.1
            text: str(root.cmdid)
            color: 1,1,1,1
        Label:
            size_hint_x: 0.3
            text: root.cmd
            color: 1,1,1,1
        Label:
            size_hint_x: 0.3
            text: root.expect
            color: 1,1,1,1
        Label:
            size_hint_x: 0.3
            text: 'acknowledged' if (root.state == 'ack') else (str(root.state))
            color: 1,1,1,1



# Stuff from elsewhere
<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            path: './schedules'

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''
            path: './schedules'

        TextInput:
            id: text_input
            size_hint_y: None
            height: 50
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)

